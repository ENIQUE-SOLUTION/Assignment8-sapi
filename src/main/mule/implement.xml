<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<os:object-store name="Object_storeAsgmt8-sapi" doc:name="Object store" doc:id="465704de-d299-46a2-b8c0-d91608ea3a18" />
	<flow name="asgmt8-sapiFlow" doc:id="54f4765a-1fd7-4fd3-992b-db2c139c1262" >
		<set-variable value='#[{&#10;("USERID1" : attributes.queryParams.USERID1) if (attributes.queryParams.USERID1 != null),&#10;&#10;("USERID2" : attributes.queryParams.USERID2) if (attributes.queryParams.USERID2 != null),&#10;&#10;("USERID3" : attributes.queryParams.USERID3) if (attributes.queryParams.USERID3 != null)&#10;}]' doc:name="All USERID's and variable name USERID" doc:id="4a45b375-2225-4376-8a61-c9b6046627c0" variableName="USERID" />
		<ee:transform doc:name="vars.USERID and empty json variable named output" doc:id="2fb9a76a-1684-4f49-b441-d902161b9e68">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
vars.USERID]]></ee:set-payload>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="output"><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<foreach doc:name="For Each" doc:id="287de523-985b-47cb-93e3-b65835b94f6b" >
			<set-variable value='#[{&#10;("USERID" : payload.USERID1) if (payload.USERID1 != null),&#10;&#10;("USERID" : payload.USERID2) if (payload.USERID2 != null),&#10;&#10;("USERID" : payload.USERID3) if (payload.USERID3 != null)&#10;}]' doc:name="variable name wrongUSERID" doc:id="ecaf8950-c679-49be-a3bb-666ad41e30d1" variableName="wrongUSERID" />
			<db:select doc:id="bea1db9f-2d5f-4e8a-bf08-0d1e21907087" config-ref="Database_Config" doc:name="select * from DETAILS" >
				<db:sql ><![CDATA[select * from DETAILS where USERID IN(:USERID1,:USERID2,:USERID3)]]></db:sql>
				<db:input-parameters ><![CDATA[#[{
	USERID1: payload.USERID1,
	USERID2: payload.USERID2,
	USERID3: payload.USERID3
}]]]></db:input-parameters>
			</db:select>
			<ee:transform doc:name="Transform to JSON payload" doc:id="d535ebf6-4f64-4d28-ab48-0158ca24cb72" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<validation:is-not-empty-collection doc:id="877bfe44-1360-4187-bcf0-946258b2a310" doc:name="check payload" />
			<ee:transform doc:name="Transform to JSON payload to pass dynamic query in database table" doc:id="4d201622-70e4-46d8-a3de-316b3308338e" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
flatten(payload map(object, index) -> { 
    query: "select USERID," ++ object.COLUMNNAMES ++ " from " ++ object.TABLENAME ++ " where USERID = '" ++ object.USERID ++ "'"
})]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<parallel-foreach doc:name="Parallel For Each" doc:id="c3743326-2a15-4430-b383-d78e6fb6da5d" >
				<db:select doc:id="a268ed19-971a-461e-a8ab-b70862e5d05d" config-ref="Database_Config" doc:name="Select_from_both_tables" >
					<db:sql ><![CDATA[#[payload."query"]]]></db:sql>
				</db:select>
			</parallel-foreach>
			<ee:transform doc:name="flatten (payload..*payload)" doc:id="972c0f7e-2546-4696-82aa-20b8c56761d7" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
flatten (payload..*payload)]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<set-variable value='#[output application/json --- vars."output" + payload]' doc:name="vars.output + payload" doc:id="2b7d7375-4501-4a47-90fa-83d87b2612c0" variableName="output" />
		</foreach>
		<ee:transform doc:name='vars."output" that is final payload' doc:id="45093fe5-5a8e-4b93-944c-72c5a867df79" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
(vars."output") ]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="applied functions distinctBy, orderBy, groupBy on(payload)" doc:id="97be481e-c2d5-46e4-baad-01e3dbb4fd6a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
(((flatten(payload) distinctBy $ orderBy ((item, index) -> item.USERID)) groupBy ((item, index) -> item.USERID)) groupBy ((value, key) -> "DEPTID" ++ value[1].DEPTID))]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="final json payload" doc:id="0c20bc58-d0fe-4f15-a6cb-3c03b46319d5" message="#[output application/json --- &#10;payload]" />
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="52138b1e-89fc-4c5b-af2f-e24e3fbb1bc6" type="DB:BAD_SQL_SYNTAX, DB:CONNECTIVITY, DB:QUERY_EXECUTION" >
				<ee:transform doc:name="error, message and details" doc:id="508160ef-a2f7-4a79-bd38-1617850386ff" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
   "error": error.errorType.identifier,
   "message": "Incorrect username and password",
   "detail": error.description
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="payload" doc:id="9252c7a3-7bfb-4b73-81fa-bc66311124aa" message="#[payload]" />
			</on-error-propagate>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="ae9620b0-609a-470b-a2cf-04867fe31b30" type="ANY" >
				<ee:transform doc:name="error and message" doc:id="9e5ec845-9180-404b-95f6-47724e06125b" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var a = vars.wrongUSERID.USERID
---
{
	"ERROR": error.errorType.identifier,
	"Message": "No records available for UserID = " ++ a ++ ". Hence cannot proceed with the execution",
	"detail": error.description
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<os:store doc:name="Object_storeAsgmt8-sapi" doc:id="5769a30f-fe3c-45f6-a265-ffb2a22af526" key='#[now() as String {format: "ddMMyyyy_hhmm"}]' objectStore="Object_storeAsgmt8-sapi">
					<os:value ><![CDATA[#[payload.Message]]]></os:value>
				</os:store>
				<logger level="INFO" doc:name="payload" doc:id="fc055fec-8869-42ce-a7ab-33b19ce5339c" message="#[payload]" />
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="implementFlow" doc:id="1050b938-c1d9-410f-8c30-6839766ecef0" initialState="started">
		<scheduler doc:name="0 0 4  * * ? PST (04:00 AM PST)" doc:id="8e5f7414-ada4-4d49-b70e-8b99176437fb" >
			<scheduling-strategy >
				<cron expression="0 0 4  * * ?" timeZone="PST" />
			</scheduling-strategy>
		</scheduler>
		<os:retrieve-all-keys doc:name="Retrieve all keys from Object_storeAsgmt8-sapi" doc:id="85c642f2-8fcf-40c1-a914-b6eaaee0a7c0" objectStore="Object_storeAsgmt8-sapi" />
		<set-variable value="#[%dw 2.0&#10;output application/json&#10;---&#10;[]]" doc:name="output empty [] folder" doc:id="31c2ad22-78a9-45e5-ad68-fff62745c0d6" variableName="output" />
		<foreach doc:name="For Each" doc:id="76fa6b6f-99c1-479d-a797-25057426b4ac">
			<set-variable value="#[payload]" doc:name="vkey is payload" doc:id="b99248eb-9893-4a5d-8860-7e10c7b24cc2" variableName="vkey" />
			<os:retrieve doc:name="Retrieve from ObjectStore with key vars.vkey" doc:id="7e069c19-3b61-4e8b-895a-a66ca2a5b110" key="#[vars.vkey]" objectStore="Object_storeAsgmt8-sapi" />
			<set-variable value='#[output application/json --- vars."output" + payload]' doc:name="vars.output + payload" doc:id="7b64c931-016d-4172-bb04-3336539195e4" variableName="output" />
		</foreach>
		<ee:transform doc:name='final payload =(vars."output")' doc:id="19201b8a-ae8a-47cc-aa2c-71741928a701">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
(vars."output")]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value='#[now() as String {format: "ddMMyyyy_HHmmss"} ++ ".csv"]' doc:name='fileName: now() as String {format: "ddMMyyyy_hhmmss"} ++ ".csv"' doc:id="c1fbed23-567c-451f-9d55-a8ea456bd8fc" variableName="fileName" />
		<file:write doc:name='now() as String {format: "ddMMyyyy_HHmmss"} ++ ".csv"' doc:id="33794e22-92cc-47cd-a03e-156d4131dc0a" config-ref="File_Config" path="#[vars.fileName]">
				</file:write>
		<file:read doc:name='now() as String {format: "ddMMyyyy_HHmmss"} ++ ".csv"' doc:id="4e3e7ffe-6889-4492-a141-66ee86a80bc5" config-ref="File_Config" path="#[vars.fileName]" />
		<email:send doc:name="Send To and From rmhase@eniquesolutions.com" doc:id="563f2d7e-62bd-45af-96d1-5d9ddd13026e" config-ref="Email_SMTP" fromAddress="rmhase@eniquesolutions.com" subject='#["response from flow project"]'>
					<email:to-addresses>
						<email:to-address value="rmhase@eniquesolutions.com" />
					</email:to-addresses>
					<email:body contentType="text/plain">
						<email:content><![CDATA[#["Please find the attached file"]]]></email:content>
					</email:body>
			<email:attachments><![CDATA[#[((now()>>"PST") as String {format: "ddMMyyyy_HHmmss"}  ++ ".csv"): payload]]]></email:attachments>
				</email:send>
	</flow>
</mule>
